<%- include base/header.ejs %>
<div class="main">
	<div class="location clearfix">
		<h1>创建星球</h1>
	</div>
	<div class="create-p">
		<form class="cp-form line-form" action="" title="" method="post">
			<div class="cp-group line-fgroup">
				<label for="planet-name"></label>
				<input type="text" name="name" value="" placeholder="请输入星球名称" id="planet-name">
			</div>
			<div class="upPIcon">
				<h4>星球头像（选填）：</h4>
				<button type="button" id="upImgBtn">+</button>
			</div>
			<div class="cp-des">
				<h4>星球说明（选填）：</h4>
				<textarea class="form-control" name="g_introduction"></textarea>
			</div>
			<div class="checkbox checksq">
				<input type="checkbox" name="private" value="1" class="chk_sq" id="private">
				<label for="private">私密星球</label>
			</div>
			<button type="submit">创建</button>
		</form>
	</div>
</div>
<%- include base/baseJS.ejs %>
<script type="text/javascript">
	(function() {
		var createGroup = {
			pName: $("#planet-name"),
			cpForm: $(".cp-form"),
			cpDes: $(".cp-des").children('textarea'),
			url: '',
			private:0,
			verificate: function() {
				this.private = $('#private:checked').val();
				if (this.private!=1 && this.private!=0) {
					this.private = 0;
				}
				var myreg = /^[0-9a-zA-Z\u4E00-\u9FA5\_]*$/;
				if (this.pName.val().length < 1 || this.pName.val().length > 20) {
					sweetAlert("格式错误", "请输入1-20位字符做为星球名称", "warning");
					return false;
				}
				if (!myreg.test(this.pName.val())) {
					sweetAlert("格式错误", "只允许中文、数字、字母和下划线", "warning");
					return false;
				}
				if (this.cpDes.val().length > 50) {
					sweetAlert("格式错误", "星球介绍不能超于50字", "warning");
					return false;
				}
				return true;
			},
			bindEvent: function() {
				var self = this;
				self.cpForm.submit(function(event) {
					event.preventDefault();
					if (self.verificate()) {
						global.subData('/createGroup', {
							name: self.pName.val(),
							g_introduction: self.cpDes.val().trim(),
							g_image: self.url,
							private:self.private
						}, function(data) {
							if (data.ret == 200 && data.data) {
								if (data.data.code == 1) { //创建成功
									window.location.href = '/group/' + data.data.info.group_base_id;
								} else {
									sweetAlert('提示', data.data.msg, 'warning');
								}
							} else {
								sweetAlert('错误', data.msg, 'error');
							}
						});
					}
				});
			},
			init: function() {
				this.bindEvent();
			}
		}
		createGroup.uploader = Qiniu.uploader({
			runtimes: 'html5,flash,html4', //上传模式,依次退化
			browse_button: upImgBtn, //上传选择的点选按钮，**必需**
			uptoken_url: '/uptoken',
			//Ajax请求upToken的Url，**强烈建议设置**（服务端提供）
			// uptoken : '<Your upload token>',
			//若未指定uptoken_url,则必须指定 uptoken ,uptoken由其他程序生成
			unique_names: true,
			// 默认 false，key为文件名。若开启该选项，SDK会为每个文件自动生成key（文件名）
			// save_key: true,
			// 默认 false。若在服务端生成uptoken的上传策略中指定了 `sava_key`，则开启，SDK在前端将不对key进行任何处理
			domain: 'http://7xlx4u.com1.z0.glb.clouddn.com/',
			//bucket 域名，下载资源时用到，**必需**
			//container: containerId,           //上传区域DOM ID，默认是browser_button的父元素，
			max_file_size: '100mb', //最大文件体积限制
			flash_swf_url: '/javascripts/plupload/Moxie.swf', //引入flash,相对路径
			filters: {
				mime_types: [
					//只允许上传图片文件 （注意，extensions中，逗号后面不要加空格）
					{
						title: "图片文件",
						extensions: "jpg,gif,png,bmp"
					}
				]
			},
			max_retries: 3, //上传失败最大重试次数
			dragdrop: true, //开启可拖曳上传
			//drop_element: 'editor-container',        //拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传
			chunk_size: '4mb', //分块上传时，每片的体积
			auto_start: true, //选择文件后自动上传，若关闭需要自己绑定事件触发上传
			init: {
				'FilesAdded': function(up, files) {
					plupload.each(files, function(file) {
						// 文件添加进队列后,处理相关的事情
						//printLog('on FilesAdded');
					});
				},
				'BeforeUpload': function(up, file) {
					// 每个文件上传前,处理相关的事情
					//printLog('on BeforeUpload');
				},
				'UploadProgress': function(up, file) {
					// 显示进度条
					//editor.showUploadProgress(file.percent);
				},
				'FileUploaded': function(up, file, info) {
					// 每个文件上传成功后,处理相关的事情
					// 其中 info 是文件上传成功后，服务端返回的json，形式如
					// {
					//    "hash": "Fh8xVqod2MQ1mocfI4S4KpRL6D98",
					//    "key": "gogopher.jpg"
					//  }
					//printLog(info);
					// 参考http://developer.qiniu.com/docs/v6/api/overview/up/response/simple-response.html

					var domain = up.getOption('domain');
					var res = $.parseJSON(info);
					var sourceLink = domain + res.key; //获取上传成功后的文件的Url
					var url = sourceLink + '?imageView2/1/w/100/h/100';
					var src = 'url(' + url + ')';
					// 设置图片为背景
					$("#upImgBtn").html("");
					$("#upImgBtn").css('background-image', src);
					createGroup.url = url;
				},
				'Error': function(up, err, errTip) {
					//上传出错时,处理相关的事情
					//printLog('on Error');
					sweetAlert('错误', errTip, 'error');
				},
				'UploadComplete': function() {
						//队列文件处理完毕后,处理相关的事情
						//printLog('on UploadComplete');

						// 隐藏进度条
						//editor.hideUploadProgress();
					}
					// Key 函数如果有需要自行配置，无特殊需要请注释
					//,
					// 'Key': function(up, file) {
					//     // 若想在前端对每个文件的key进行个性化处理，可以配置该函数
					//     // 该配置必须要在 unique_names: false , save_key: false 时才生效
					//     var key = "";
					//     // do something with key here
					//     return key
					// }
			}
		});
		// domain 为七牛空间（bucket)对应的域名，选择某个空间后，可通过"空间设置->基本设置->域名设置"查看获取
		// uploader 为一个plupload对象，继承了所有plupload的方法，参考http://plupload.com/docs
		createGroup.init();
	})();
</script>
<%- include base/footer.ejs %>