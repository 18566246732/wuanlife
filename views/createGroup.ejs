<%- include base/header.ejs %>
        <div class="main">
            <div class="location clearfix">
                <h1>创建星球</h1>
            </div> 
            <div class="create-p">
                <form class="cp-form line-form" action="/createGroup" title="" method="post">
                    <div class="cp-group line-fgroup">
                        <label for="planet-name"></label>
                        <input type="text" name="name" value="" placeholder="请输入星球名称" id="planet-name"> 
                    </div>
                    <div class="upPIcon">
                        <h4>星球头像（选填）：</h4>
                        <input type="file" name="g_image" value="" placeholder="" id="upImg">
                        <button type="button" id="upImgBtn">+</button>
                    </div>
                    <div class="cp-des">
                        <h4>星球说明（选填）：</h4>
                        <textarea class="form-control" name="g_introduction"></textarea>
                    </div>
                    <button type="submit">创建</button>
                </form>
            </div>
        </div> 
        <%- include base/baseJS.ejs %>
        <script type="text/javascript">
            var create_p ={
                pName: $("#planet-name"),
                cpForm: $(".cp-form"),
                upImgBtn: $("#upImgBtn"),
                upImg: $("#upImg"),
                cpDes: $(".cp-des").children('textarea'),
                imgData: null,
                verificate: function(){
                    var myreg = /^[0-9a-zA-Z\u4E00-\u9FA5\_]*$/;
                    if (this.pName.val().length<1 || this.pName.val().length>20) {
                        sweetAlert("格式错误","请输入1-20位字符做为星球名称","warning");
                        return false;
                    }
                    if (!myreg.test(this.pName.val())) {
                        sweetAlert("格式错误","只允许中文、数字、字母和下划线","warning");
                        return false;
                    }
                    if (this.cpDes.val().length > 50){
                        sweetAlert("格式错误","星球介绍不能超于50字","warning");
                        return false;
                    }
                    return true;
                },
                validateImg:function(data,filters){
                    var pos = data.indexOf(",") + 1;
                    for (var e in filters) {
                        if (data.indexOf(filters[e]) === pos) {
                            return e;
                        }
                    }
                    return null;
                },
                showPrvImg:function(src,prvid){
                    var url = 'url(' + src + ')';
                    prvid.css('background-image', url);
                    prvid.html("");
                },
                previewImage: function(){
                    /* file：file控件
                     * prvid: 图片预览
                    */
                    var self = this;
                    var filters = {
                        "jpeg"  : "/9j/4",
                        "gif"   : "R0lGOD",
                        "png"   : "iVBORw"
                    };
                    var limit = 1*1024*1024;
                    if (window.FileReader) { // html5方案
                        for (var i=0, f; f = self.upImg[0].files[i]; i++) {
                            var size = f.size;
                            var fr = new FileReader();
                            fr.onload = function(e) {
                                var src = e.target.result;
                                if (!self.validateImg(src,filters)) {
                                    sweetAlert('提示', "上传格式不正确", 'warning');
                                } else if(size> limit){
                                    console.log(size);
                                    sweetAlert('提示', "图片大小不能超过1M", 'warning');
                                }
                                else {
                                    self.showPrvImg(src,self.upImgBtn);
                                    self.imgData = src;
                                   console.log(self.imgData);
                                }
                            }
                            fr.readAsDataURL(f);
                        }
                    } else { // 降级处理
                        if ( !/\.jpg$|\.png$|\.gif$/i.test(self.upImg[0].value) ) {
                            sweetAlert('提示', "上传格式不正确", 'warning');
                        } else {
                            self.showPrvImg(self.upImg[0].value,self.upImgBtn);
                            self.imgData = self.upImg[0].value;
                        }
                    }
                },
                bindEvent: function() {
                    var self = this;
                    self.cpForm.submit(function(event){
                        console.log(self.imgData);
                        event.preventDefault();
                        if (self.verificate()) {
                            $.ajax({
                                type: "post",
                                url: "/createGroup",
                                async: true,
                                data:{
                                    name: self.pName.val(),
                                    user_id: localStorage.getItem("userID"),
                                    g_introduction: self.cpDes.val().trim(),
                                    g_image: self.imgData
                                    //g_image:self.upImg[0].value
                                },
                                success:function(data){
                                    console && console.log(data);
                                    if (data.ret == 200 && data.data){
                                        if (data.data.code == 0 && data.data.msg){
                                            sweetAlert('提示', data.data.msg, 'warning');
                                        } else {
                                            window.location.href = '/group/' + data.data.info.group_base_id;
                                            //console.log(data.data.group_base_id);
                                        }
                                    }
                                },
                                error: function(x, h, r) {
                                    console && console.log(x, h, r);
                                }
                            });
                        }
                    });
                    self.upImgBtn.on('click', function(event) {
                        self.upImg.trigger('click');
                    });
                    self.upImg.on('change', function(event) {
                       self.previewImage();
                    });
                },
                init: function(){
                    global.GotoIndex();
                    this.bindEvent();
                }
            }
            create_p.init();
        </script>
        <%- include base/footer.ejs %>