<%- include base/header.ejs %>
<div class="main ">
<div class="message-page">
    <div class="message-left">
        <h1><a class="text-link" href="/message" title="">消息中心</a></h1>
        <ul>
            <li class="active">通知</li>
            <li>私密星球申请</li>
        </ul>
    </div>
    <div class="message-right">
        <ul class="message-right-tag clearfix">
            <li class="active">回复我的</li>
            <li>其他通知</li>
        </ul>
        <%if(result.code == 1){%>
        <div class="message-col">
            <% result.info.forEach(function(item) { %>
            <div id="<%=item.id %>" class="message clearfix">
                <div class="meg-reply-title">
                    <h3><%=item.nickname%>：<%=item.replytext%></h3>
                    <div><span>回复我的主题：</span><%=item.posttitle%> > <%=item.groupname%></div>
                </div>
                <div class="meg-reply-time">
                    <div><span><%=item.createTime%></span></div>
                    <button>回复</button>
                </div>
            </div>
            <% }) %>
        </div>     

        <div class="page-turn">
            <%if(result.currentPage == 1){console.log(result)%>
            <button type="button" class="unCBtn" id="pre">上一页</button>
            <%}else{%>
            <button type="button" id="pre">上一页</button>
            <%}%>
            <span><%=result.currentPage%>/<%=result.pageCount%></span>
            <%if(result.currentPage == result.pageCount){%>
            <button type="button" class="unCBtn" id="next">下一页</button>
            <%}else{%>
            <button type="button" id="next">下一页</button>
            <%}%>
        </div>
        <%}else{%>
        <div class="emptyPage">
            您还没有消息哦
        </div>
        <%} %>
    </div>
</div>
</div>
<%- include base/baseJS.ejs %>

<script type="text/javascript">
    (function() {
        var message = {
            pre: $("#pre"),
            next: $("#next"),
            page: $(".page-turn").find('span').eq(0),
            main: $(".message-col"),
            loading: $(".loading"),
            pageCount: parseInt("<%=result.pageCount%>"),
            filterType: global.getUrlParam('status'),
            getServerData: function(param, cb) {
                global.getData("/api/getMessageShow", param, cb);
            },
            postApplyPrivate: function(param, cb) {
                global.getData("/api/applyPrivateGroup");
            },
            rebindButton: function() {
                var self = this;

                //策略模式
                var ChangeStrategies = {
                    //输入Jquery对象button和其父元素message
                    agree2disable: function(button, message) {
                        message.children(".meg-button.disagree").remove();
                        button.removeClass("agree");
                        button.addClass("meg-right-text");
                        button.html("已同意");
                        button.unbind("click");                       
                    },
                    disagree2disable: function(button, message) {
                        message.children(".meg-button.agree").remove();
                        button.removeClass("disagree");
                        button.addClass("meg-right-text");
                        button.html("已拒绝");
                        button.unbind("click");  
                    }

                }; 
                $(".meg-button.agree").each(function(){
                    var thisButton = $(this);
                    var thisMessage = thisButton.parent();
                    thisButton.on("click", function () {
                        self.loading.show();
                        global.subData("/api/processApplyPrivateGroup",{
                            messageID: parseInt(thisMessage.eq(0).attr('id')),
                            operation: 1
                        },function(data){
                            self.loading.hide();
                            if (data.ret == 200 && data.data) {
                                if (data.data.code == 1) {
                                    ChangeStrategies.agree2disable(thisButton, thisMessage);
                                } else {
                                    sweetAlert('提示', data.data.msg, 'warning');
                                }
                            } else {
                                sweetAlert('错误', data.msg, 'error');
                            }
                        });
                    });
                });
                $(".meg-button.disagree").each(function(){
                    var thisButton = $(this);
                    var thisMessage = thisButton.parent();
                    thisButton.on("click", function () {
                        self.loading.show();
                        global.subData('/api/processApplyPrivateGroup',{
                            messageID: parseInt(thisMessage.eq(0).attr('id')),
                            operation: 0
                        },function(data){
                            self.loading.hide();
                            if (data.ret == 200 && data.data) {
                                if (data.data.code == 1) {
                                    ChangeStrategies.disagree2disable(thisButton, thisMessage)
                                } else {
                                    sweetAlert('提示', data.data.msg, 'warning');
                                }
                            } else {
                                sweetAlert('错误', data.msg, 'error');
                            }
                        });
                    });
                });
            },
            updateByPage:function(){
                var self = this;
                var pageNow = global.getPageNow();
                var statusNow = global.getUrlParam('status');
                self.filterType = statusNow || 1;
                self.loading.show();
                self.getServerData({
                    currentpage: pageNow,
                    userId: <%=user.userID%>,
                    status: self.filterType,
                    mtype: self.mtype
                }, function(data) {
                    if(data.ret == 200 && data.currentPage == undefined) {
                        self.main.html("<div class='emptyPage'>您还没有消息哦</div>")
                        $('.page-turn').hide();
                        self.loading.hide();
                    }
                    if (pageNow != global.getPageNow()) {
                        self.main.html(compiled);
                        return;
                    }
                    if (data.ret == 200 && data.data && data.data.info.length > 0) {
                        $('.page-turn').show();
                        $('.filter-list').children('li').removeClass('filter-clicked');
                        $('.filter-list').children('li').eq(parseInt(self.filterType - 1)).addClass('filter-clicked');
                        var compiled = template("listtemplate", data.data);
                        self.main.html(compiled);
                        self.rebindButton();
                        self.page.text(data.data.currentPage + '/' + data.data.pageCount);
                        global.setPageCount(data.data.pageCount);
                        self.pre.removeAttr('class');
                        self.next.removeAttr('class');
                        if (data.data.currentPage == 1) {
                            self.pre.addClass('unCBtn');
                        }
                        if (data.data.currentPage == data.data.pageCount) {
                            self.next.addClass('unCBtn')
                        }
                        self.loading.hide();
                        $(window).scrollTop(0);
                    } else {
                        self.loading.hide();
                        sweetAlert('错误', '数据获取失败', 'error');
                    }
                });
            },
            bindFilterEvent: function() {
                /*绑定过滤器列表显示隐藏*/
                var filter = $('.filter');
                var filterList = $('.filter-list');
                var num = 0;
                filterList.hide(); 
                filter.on("click", function() {
                    num++;
                    if(num % 2 == 1) {
                        filterList.show();
                    } else {
                        filterList.hide();
                    }
                });

                var self = this;
                var all = $('.filter-all');
                var read = $('.filter-read');
                var notread = $('.filter-notread');

                var bindFilterEventByStatus = function(Jobject, status) {
                    Jobject.on("click", function() {
                        self.filterType = status;
                        $(this).siblings("*").removeClass("filter-clicked")    
                        $(this).addClass("filter-clicked");
                        var newURL = location.pathname + '?status=' + status;
                        history.pushState(null,'',newURL);   
                        global.changeEverPushed();
                        self.updateByPage();        
                    })
                };
                bindFilterEventByStatus(all, 1);
                bindFilterEventByStatus(read, 2);
                bindFilterEventByStatus(notread, 3);
            },
            bindEvent: function() {
                var self = this;
                global.setPageCount(self.pageCount);
                global.pageTurning.apply(self,["#pre","#next",self.updateByPage]);
                //绑定过滤器事件
                this.bindFilterEvent();    
            },
            init: function() {
                this.bindEvent();
                this.rebindButton();
                this.getServerData()
            }
        }
        message.init();
    })();
</script>
<%- include base/footer.ejs %>