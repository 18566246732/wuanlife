<%- include base/header.ejs %>
<div id="content">
    <div class="article">
        <div class="section big-container">
            <div id="post-container" class="section-content bg-white">
                <div class="post-replies">
                    <div class="post-reply-header">
                        <h1> 个回复</h1>
                    </div>
                    <div class="post-reply-replies"></div>
                    <div id="demo1"></div>
                    <div class="post-reply-send">
                        <input id="post-reply-send-content" type="text" autocomplete="off" placeholder="">
                        <button id="post-reply-send-btn">回复</button>                    
                    </div>  
                </div>                  
            </div>     
        </div>
    </div>
    <div class="aside">
        <div class="section big-container">
            <div class="section-content">
                <div id="group-card" class="card">

                </div>
            </div>     
        </div>
    </div>
</div>
<%- include base/baseJS.ejs %>

<script type="text/html" id="group-card-tpl">
<div class="group-card-header">
    <img src="{{groups.g_image}}">
    <div class="group-card-header-title">
        <h1>{{groups.g_name}}</h1>
        <div>
            <p>999+ 话题</p>
            <p>999+ 成员</p>
        </div>
    </div>
</div>
<div class="group-card-body">
    <p>{{groups.g_introduction}}</p>
    <p class="group-card-body-creator">星球主: {{groups.g_introduction}}</p>
</div>
<div class="group-card-footer">
    <button id="quit-group">退出星球</button>
</div>    
</script>

<script type="text/html" id="postdetails-tpl">
<div id="post-2" class="post-details">
    <div class="post-details-header">
        <div class="post-details-info">
            <img src="{{users.profile_picture}}">
            <p>{{users.user_name}}</p>
        </div>
        <div class="post-details-date">
            <p>{{posts.create_time}}</p>
        </div>
    </div>
    <div class="post-details-content">
        <h1>{{posts.p_title}}</h1>
        <div class="post-details-main">
            {{posts.p_text}}
        </div>
    </div>
    <div class="post-details-footer">
        <div class="post-details-buttons">
            <button id="btn-approve">                    
                <svg aria-hidden="true" class="icon">
                    <use xlink:href="#icon-good_blue">
                    </use>
                </svg>
                点赞
            </button>
            <button id="btn-collect">
                <svg aria-hidden="true" class="icon">
                    <use xlink:href="#icon-star_blue">
                    </use>
                </svg>   
                收藏                    
            </button>
        </div>
        <div class="post-details-operations">
            {{if rights.sticky_right == 1}} <p id="op-setTop">置顶</p> {{/if}}
            {{if rights.lock_right == 1}} <p id="op-lock">锁定</p> {{/if}}
            {{if rights.edit_right == 1}} <p id="op-edit">编辑</p> {{/if}}
            {{if rights.delete_right == 1}} <p id="op-delete">删除</p> {{/if}}
        </div>
    </div>
</div>
</script>
<script type="text/html" id="reply-tpl">
    {{each reply as item i}}
        <div class="post-reply-entry">
            <div class="post-reply-entry-header">
                <div class="post-reply-name">
                    <p>{{item.user_name}}</p>
                </div>
                <div class="post-reply-date">
                    <p>{{item.create_time}}</p>
                </div>
            </div>
            <div class="post-reply-entry-body">
                <p>{{item.p_text}}</p>
            </div>
            <div id="reply-{{item.p_floor}}" class="post-reply-entry-footer">
                <div class="post-reply-operations">
                    {{if item.delete_right == 1}} <p id="{{item.p_floor}}-op-reply-delete">删除</p> {{/if}}
                </div>
            </div>
        </div>
    {{/each}}  
</script>

<script>
(function() {
    var approve = function(id) {
        // if(isApproved())
        global.subData('/approve',{postid : id}, function(data) {
            if (data.ret == 200 && data.data) {
                //样式更新或者如何
                swal(data.data.msg)

            } else {
                sweetAlert('错误', '点赞失败', 'error');
            }                                   
        });            
    }
    var collect = function(id) {
        global.subData('/collect',{postid : id}, function(data) {
            if (data.ret == 200 && data.data) {
                //样式更新或者如何
                swal(data.msg);
            } else {
                sweetAlert('错误', '收藏失败', 'error');
            }                                   
        });            
    } 
    var postobj = {
        postid: <%= postid%>,
        postContainer: $('#post-container'),
        replyInput: $('#post-reply-send-content'),
        bindEvent: function() {
            var self = this;

            //绑定点赞和收藏
            $("#btn-approve").on("click", function() {
                approve(<%= postid%>);
            })
            $("#btn-collect").on("click", function() {
                collect(<%= postid%>);
            })       
            //绑定置顶
            $("#op-setTop").on("click", function() {
                global.putData("/api/posts/<%= postid%>/onSetTop", {setTop: true}, function(data) {
                    if (data.ret == 200 && data.data) {

                        switch(data.data.code){
                            case 0:
                                swal('置顶失败',data.msg,'error');
                                break;
                            case 1:
                                swal('置顶成功',data.msg,'success');
                                break;
                            case 2:
                                swal('取消置顶成功',data.msg,'success');
                                break;
                            default:
                                swal('失败',data.msg,'error');
                        }               
                    } else {
                        sweetAlert('错误', data.msg, 'error');
                    }
                });
            })

            //绑定锁定
            $("#op-lock").on("click", function() {
                global.putData("/api/posts/<%= postid%>/onLock", {}, function(data) {
                     if (data.ret == 200 && data.data) {
                            switch(data.data.code){
                                case 0:
                                    swal('锁定失败',data.msg,'error');
                                    break;
                                case 1:
                                    swal('锁定成功',data.msg,'success');
                                    break;
                                case 2:
                                    swal('取消锁定成功',data.msg,'success');
                                    break;
                                default:
                                    swal('失败',data.msg,'error');
                            }
                        
                        
                    } else {
                        sweetAlert('错误', data.msg, 'error');
                    }
                });
            }) 

            //绑定删除
            $("#op-delete").on("click", function() {
                global.deleteData("/api/posts/<%= postid%>/onDelete", {}, function(data) {
                    if (data.ret == 200 && data.data) {
                        if(data.data.code){
                            switch(data.data.code){
                                case 0:
                                    swal('删除失败',data.msg,'error');
                                    break;
                                case 1:
                                    swal('删除成功',data.msg,'success');
                                    break;
                                default:
                                    swal('错误',data.msg,'error');
                            }
                        }else{
                            sweetAlert('错误',data.msg,'error');
                        }
                        
                        
                    } else {
                        sweetAlert('错误', data.msg, 'error');
                    }
                });
            })

            //绑定编辑
            $("#op-edit").on("click", function() {
                //window.location.href = ''

                global.putData("/api/posts/<%= postid%>/onEdit", {}, function(data) {
                    if (data.ret == 200 && data.data) {
                        if(data.data.code){
                            switch(data.data.code){
                                case 0:
                                    swal('编辑失败',data.msg,'error');
                                    break;
                                case 1:
                                    swal('编辑成功',data.msg,'success');
                                    break;
                                default:
                                    swal('错误',data.msg,'error');
                            }
                        }else{
                            sweetAlert('错误',data.msg,'error');
                        }
                        
                        
                    } else {
                        sweetAlert('错误', data.msg, 'error');
                    }
                });
            })                                        
        },
        init: function() {
            var self = this;
            global.subData("./<%= postid%>", {}, function(data) {
                if (data.ret == 200 && data.data) {
                    template.config("escape", false);
                    var compiled = template("postdetails-tpl", data.data);
                    self.postContainer.html(compiled + self.postContainer.html());
                    compiled = template("group-card-tpl", data.data);
                    $("#group-card").html(compiled);
                    self.bindEvent();
                } else {
                    sweetAlert('错误', '数据获取失败', 'error');
                }
            });

            //分页加载评论
            function demo(curr){
                var result = '';
                global.subData("./<%= postid%>/reply", {replypn : curr || 1}, function(data) {
                    //第一次加载获取评论总数
                    if(!curr) {
                        $('.post-reply-header').html('<h1>' + data.data.reply_count + " 个回复</h1>");
                    }
                    if((curr || 1)<=data.data.page_count){
                        result = template("reply-tpl",data.data);
                    }
                    //插入数据
                    $('.post-reply-entry').remove();
                    $('.post-reply-replies').append(result); 
                    laypage({
                        cont: document.getElementById('demo1'),
                        pages: data.data.page_count, //通过后台拿到的总页数
                        curr: curr || 1, //当前页
                        jump: function(obj, first){ //触发分页后的回调
                            if(!first){ //点击跳页触发函数自身，并传递当前页：obj.curr
                                demo(obj.curr);
                            }
                        }
                    });
                    //rebind();
                    //绑定回复
                    $("#post-reply-send-btn").on("click", function() {
                        //判断是否登录
                        <% if(typeof user== 'undefined') {%>
                            
                            sweetAlert('错误','请登录之后在进行回复','error');
                            setTimeout(function(){
                                window.location.href = '/personal/login';
                                },2000);
                            
                        <% }else{%>

                        global.subData("./<%= postid%>/replysend", {p_text: $('#post-reply-send-content').val()}, function(data) {
                            if (data.ret == 200 && data.data) {
                                swal('发送成功');
                                $('#post-reply-send-content').val('');
                                location.replace(location.href);
                            } else {
                                sweetAlert('错误', '回复失败', 'error');
                            }
                        });
                        <% }%>
                    })
                    //绑定各个回复的删除按钮
                    $("p[id*='op-reply-delete']").on("click", function(e) {
                        var replyid = e.target.id.split("-")[0];
                        //我在玩蛇
                        var entry = e.target.parentNode.parentNode.parentNode;
                        global.deleteData("/api/posts/"+self.postid+"/replies/"+replyid, {}, function(data) {
                            if (data.ret == 200 && data.data) {
                                swal('删除成功');
                                entry.style.display = "none";
                            } else {
                                sweetAlert('错误', '删除失败', 'error');
                            }                            
                        })
                    })
                });
            };
            demo();

            self.bindEvent();
        },
    }


    postobj.init();

})();
</script>
<%- include base/footerMobile.ejs %>
