<%- include base/header.ejs %>
<div class="main">
    <div class="location clearfix">
        <h1>重置密码</h1>
    </div>
    <div class="login">
        <form class="login-form line-form" title="" method="post" id="resetPE">
            <div class="login-group line-fgroup">
                <label for="email" class="lable-e"></label>
                <input type="email" name="email" value="" placeholder="邮箱" id="email">
            </div>
            <button type="submit">下一步</button>
        </form>
    </div>
</div>
<%- include base/baseJS.ejs %>
<script type="text/javascript" id="template">
        <form class="login-form line-form" method="post" id="resetPassword">
            <div class="login-group line-fgroup">
                <label for="code" class="label-code"></label>
                <input type="text" name="code" placeholder="验证码" id="code">
            </div>
            <div class="login-group line-fgroup">
                <label for="pw" class="label-paw"></label>
                <input type="password" name="password" placeholder="新密码" id="pw">
            </div>
            <div class="login-group line-fgroup">
                <label for="cpw" class="label-cPass"></label>
                <input type="password" name="psw" placeholder="确认密码" id="cpw">
            </div>
            <button type="submit">确定</button>
        </form>
</script>
<script type="text/javascript">
	var resetPE = {
		email: $("#email"),
		main: $(".login"),
		sendEform: $("#resetPE"),
		loading: $(".loading"),
		verificate: function() {
			var myreg = /^([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+\.[a-zA-Z]{2,3}$/;
			if (!myreg.test(this.email.val())) {
				sweetAlert('格式错误', '请填写正确的邮箱！', 'warning');
				return false;
			}
			return true;
		},
		bindEvent: function() {
			var self = this;
			self.sendEform.submit(function(event) {
				event.preventDefault();
				if (self.verificate()) {
					self.loading.show();
					global.subData('/resetPassword', {
						email: self.email.val()
					}, function(data) {
						console && console.log(data);
                        self.loading.hide();
						if (data.ret == 200 && data.data) {
							if (data.data.code == 1) {
								//邮件发送成功
								var temp = template("template");
								self.main.html(temp);
								var resetPass = new self.ResetPassword($("#code"), $("#pw"), $("#cpw"), $("#resetPassword"));
								resetPass.init();
							} else {
								sweetAlert('提示', data.data.msg, 'warning');
							}
						} else {
							sweetAlert('错误', data.msg, 'error');
						}
					});
				}
			});
		},
		init: function() {
			this.bindEvent();
		}
	}
	resetPE.init();
	(function(reset) {
		function ResetPassword(code, pw, cpw, rform) {
			this.code = code;
			this.pw = pw;
			this.cpw = cpw;
			this.rform = rform;
            this.loading = $(".loading");
		}
		ResetPassword.prototype.verificate = function() {
			if (this.code.val().length == 0) {
				sweetAlert('格式错误', '请填写验证码！', 'warning');
				return false;
			}
			if (this.pw.val().length == 0) {
				sweetAlert('格式错误', '请填写密码！', 'warning');
				return false;
			}
			if (this.pw.val().length < 6 || this.pw.val().length > 20) {
				sweetAlert('格式错误', '请填写6-20位密码', 'warning');
				return false;
			}
			if (this.pw.val() !== this.cpw.val()) {
				sweetAlert('格式错误', '两次密码输入不一致', 'warning');
				return false;
			}
			return true;
		}
		ResetPassword.prototype.bindEvent = function() {
			var self = this;
			self.rform.submit(function(event) {
				event.preventDefault();
				if (self.verificate()) {
                    self.loading.show();
					global.subData('/resetPassword/set', {
						code: self.code.val(),
						password: self.pw.val(),
						psw: self.cpw.val()
					}, function(data) {
						console && console.log(data);
                        self.loading.hide();
						if (data.ret == 200 && data.data) {
							if (data.data.code == 1) {
								window.location.href = '/login'; //重置成功
							} else {
								sweetAlert('提示', data.data.msg, 'warning');
							}
						} else {
							sweetAlert('错误', data.msg, 'error');
						}
					});
				}
			});
		}
		ResetPassword.prototype.init = function() {
			this.bindEvent();
		}
		reset.ResetPassword = ResetPassword;
	})(resetPE);
</script>
<%- include base/footer.ejs %>